<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="example">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy" filename="3D/boxy.robot"/>

    <Task label="query" robot="boxy">
      <StartConstraints>
        <!-- WARNING Support for multiple constraints is not yet implemented! -->
        <!-- Use <Random/> to specify a randomly sampled configuration -->
        <CSpaceConstraint point="0 10 0 0 0 0"/>
      </StartConstraints>

      <GoalConstraints>
        <!-- Here multiple constraints indicates a compound goal. Each constraint
             represents a single intermediate goal. -->
        <!-- Use <Random/> to specify a randomly sampled configuration -->
        <CSpaceConstraint point="0 -10 0 0.2 0.8 0.5"/>
      </GoalConstraints>
    </Task>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="4"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <ObstacleBasedSampler label="ObstacleBased" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="0" nShellsFree="10" debug="false"/>
      <GaussianSampler label="Gauss" vcLabel="rapid" d="0.2" dmLabel="euclidean"
        useBBX="false" nShellsColl="0" nShellsFree="1" debug="false"/>
      <BridgeTestSampler label="Bridge" vcLabel="rapid" d="0.2"
        dmLabel="euclidean" useBBX="true"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="4." minDist=".01"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <NeighborhoodConnector label="Closest" debug="true"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="RNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras" safeIntervalToolLabel="SI"/>
      <LazyQuery label="LazyQuery" debug="true"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>

      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="50" operator=">="/>

      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>

      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>

      <TimeEvaluator label="TimeEval" timeout="10"/>

    </MapEvaluators>

    <MPStrategies>

	    <BasicPRM label="PRM-query" debug="true" querySampler="UniformRandomFree">
		    <Sampler label="UniformRandomFree" number="25" attempts="1"/>
		    <Connector label="Closest"/>
		    <Evaluator label="Query"/>
	    </BasicPRM>

	    <BasicPRM label="PRM-build" debug="true" querySampler="UniformRandomFree">
		    <Sampler label="UniformRandomFree" number="25" attempts="1"/>
		    <Connector label="Closest"/>
		    <Evaluator label="NodesEval"/>
	    </BasicPRM>

	    <!-- LazyPRM -->
	    <BasicPRM label="LazyPRM" debug="true">
		    <Sampler label="UniformRandom" number="1" attempts="1"/>
		    <Connector label="ClosestAlwaysTrue"/>
		    <Evaluator label="LazyQuery"/>
	    </BasicPRM>

	    <!-- Basic RRT -->
	    <BasicRRTStrategy label="RRT" debug="true"
		    querySampler="UniformRandomFree" samplerLabel="UniformRandom"
		    nfLabel="Nearest" extenderLabel="BERO"
		    growGoals="false" growthFocus="0.01" m="1"
		    goalDmLabel="euclidean" goalThreshold="5">
	            <Evaluator label="Query"/>
           </BasicRRTStrategy>

      <!-- MyStrategy -->
      <MyStrategy label="MyStrategy"/>

      <!-- MyEST -->
      <MyEST label="MyEST">
        <Evaluator label="Query"/>
      </MyEST>

    </MPStrategies>

    <MPTools>
      <SafeIntervalTool label="SI" vcLabel="rapid"/>

    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="MyEST" seed="12345678"
      baseFilename="MyEST" vizmoDebug="true"/>

  </Library>

</MotionPlanning>
